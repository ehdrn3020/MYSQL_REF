##Tuning in mysql


###[Monitoring and Flush]###

#View mysql server status
show status : MYSQL DB의 현재 상황
show Processlist : MYSQL 프로세스 목록
show variables : 설정 가능한 모든 변수 목록

#Flush
flush logs : MYSQL 로그파일 초기화
flush status : MYSQL 상태정보 초기화
flush thread : 쓰레드 캐시에 저장된 쓰레드 초기화
flush tables : MYSQL에 캐싱된 테이블 초기화
flush privileges : 권한정보 재설정



###[Connection Tuning]###


##[Variables]

-Show Status
Aborted_clients : 클라이언트 프로그램이 비정상적으로 종료된 수
Aborted_connects : MYSQL 서버로 접속이 실패된 수 
Max_used_connections : 최대 동시에 접속한 수

Threads_cached : thread cache의 쓰레드 수
Threads_connected : 현재 연결된 쓰레드 수
Threads_created : 접속을 위해 생성된 Thread 수
Threads_running : Sleeping 되어 있지 않은 Thread 수

-Show Variables
wait_timeout : 종료전까지 요청이 없이 기다리는 시간(TCP/IP 연결, Shell접속이 아닌 경우)
thread_cache_size : 쓰레드 재사용을 위한 thread cache 수. Cache에 있는 쓰레드 수보다 접속이 많으면 새롭게 쓰레드 생성
max_connections : 최대 동시 접속 가능 수 


##Connection Tuning
Cache Miss Rate(%) =  Threads_created / Connections * 100
Connection Miss Rate(%) = Aborted_connects / Connections * 100
Connection Usage(%) = Threads_connected / max_connections * 100

-Connection Usage(%)가 100% 라면 max_connections 수를 증가시켜 주십시요. Connection 수가 부족할 경우 Too Many Connection Error 가 발생합니다.
-DB 서버의 접속이 많은 경우는 wait_timeout 을 최대한 적게 (10~20 정도를 추천) 설정하여 불필요한 연결을 빨리 정리하는 것이 좋습니다. 
 그러나 Connection Miss Rate(%) 가 1% 이상이 된다면 wait_timeout 을 좀 더 길게 잡는 것이 좋습니다.
-Cache Miss Rate(%) 가 높다면 thread_cache_size를 기본값인 8 보다 높게 설정하는 것이 좋습니다. 일반적으로 threads_connected 가 Peak-time 시 보다 약간 낮은 수치로 설정하는 것이 좋습니다.
-MySQL 서버는 외부로 부터 접속 요청을 받을 경우 인증을 위해 IP 주소를 호스트네임으로 바꾸는 과정을 수행하여 접속시에 불필요한 부하가 발생하게 됩니다. 
 skip-name-resolve를 설정하시고 접속시에 IP 기반으로 접속을 하게 되면 hostname lookup 과정을 생략하게 되어 좀 더 빠르게 접속을 하실 수 있습니다.



###[Memory Tuning]

##[Variables]

#Show Status
key_block_unused : Key Cache에서 사용되고 있지 않은 Block수
key_reads : Key Block 읽기 요청시 Disk를 읽은 수
key_read_requests : Key Block 읽기 요청 수 

#Show Variables
key_buffer_size : 인덱스를 메모리에 저장하는 버퍼크기
table_cache : 전체 쓰레드가 사용할 오픈 가능한 테이블 수
myisam_sort_buffer_size : 테이블 repair, alter table, load data에 사용되는 버퍼 메모리 크기
join_buffer_size : 조인을 위한 메모리 버퍼 크기
record_buffer : 순차적인 검색을 위해 사용되는 메모리 버퍼 크기
record_rnd_buffer : order by절을 사용할 경우 디스크 사용을 피하기 위해 사용되는 메모리
sort_buffer : order by와 group by에서 사용되는 메모리 버퍼 크기
tmp_table_size : group by시 디스크를 사용하지 않고 임시 테이블을 만들기 위해 사용되는 메모리
key_cache_block_size : block의 크기(bytes, 기본 1024)


#Memory Tuning
Key Buffer Usage = 1 – ((Key_blocks_unused × key_cache_block_size) / key_buffer_size)
Key_reads/Key_read_requests Rate(%) =  Key_reads/Key_read_requests * 100
Key_reads/Key_read_requests Relative Rate(%) = (1- ^Key_reads/^Key_read_requests) * 100
^Key_Reads = Current Key_Rreads – Previous Key_Reads


-key_buffer_size는 총 메모리 크기의 25% 정도의 크기로 설정하는 것이 좋다.
-Key_reads/Key_read_requests Rate(%)은 일반적으로 1%보다 적다. 1% 보다 높다면 Key Cache가 아닌 디스크를 읽은 경우가 많다고 판단할 수 있다. 
 또한 Key_reads/Key_reads_requests Relative Rate(%) 값이 지속적으로 90% 이상일 경우는 key_buffer_size가 효율적으로 설정되어 있다고 생각하시면 됩니다. 
 하지만 데이터베이스가 엄청나게 크거나 여러 데이터를 골고루 많이 읽는 데이터베이스라면 아무리 많은 양의 키 캐시를 설정해도 90% 이상의 적중률을 얻을 수는 없다.

- MYSQL 메모리 사용 간단 공식
innodb_buffer_pool_size + key_buffer + max_connections * 
 (join_buffer + record_buffer + sort_buffer + thread_stack + tmp_table_size + 2MB)

- show status like 'max%' 의 max_used_connections를 체크 ( 최대 값보다 10% 크게 설정 )
max_connections = 100
 
- 인덱스를 위한 버퍼 공간, 키버퍼의 크기는 공유된 쓰레드의 크기이며 중복된 키를 자주 사용할 경우 속도 증진
# show status like 'key%'의 key_blocks_used를 체크
1. 메모리가 충분 key_buffer = (key_blocks_used * 1024) * (2 or 3)
2. 메모리가 불충분 key_buffer = (key_blocks_used * 1024)
[ key_reads/ key_read_request <0.01 ] [ key_write / key_write_request = 1 ] 일경우 만족
key_buffer = 64M
max_allowed_packet = 25M
 
- MySQL 서버가 한번에 열수 있는 테이블의 개수설정
# show status like 'open%'의 opened_tables 값이 클 경우 table_cache 를 늘림
# max_connections 값이 100 일 경우 100*n (조인해서 열수 있는 최대 테이블 개수)
table_cache =256 # Checked opened tables and adjusted accordingly after running for a while.
 
- order by, group by 절을 빠르게 하기 위해서 sort_buffer 값을 조절
많은 연속적인 테이블 스캔이 이루어진다면 record_buffer 값을 조절
max_used_connection이 높은 경우 대략 (sort_buffer + record_buffer < 8M) 로 잡아준다.
sort_buffer_size = 4M
net_buffer_length = 8K
read_buffer_size = 1M
read_rnd_buffer_size = 2M
myisam_sort_buffer_size = 8M

default-character-set=utf8
character-set-server=utf8
collation-server=utf8_general_ci


